"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var misc_utils_of_mine_generic_1 = require("misc-utils-of-mine-generic");
/**
 * Will render given graph represented by [[node]] as a .dot string.
 */
function graphToDot(_a) {
    var node = _a.node, _b = _a.name, name = _b === void 0 ? 'AST' : _b, _c = _a.cluster, cluster = _c === void 0 ? false : _c, _d = _a.rankdir, rankdir = _d === void 0 ? 'LR' : _d;
    var elements = [];
    function f(node) {
        var id = getNodeId(node);
        node.attrs = node.attrs || {};
        if (!elements.find(function (e) { return e.id === id; })) {
            elements.push({ id: id, nodes: [node], text: id + " [label=\"" + node.label + "\"" + (misc_utils_of_mine_generic_1.objectKeys((node.attrs || {})).length ? ', ' : ' ') + misc_utils_of_mine_generic_1.objectKeys((node.attrs || {})).map(function (k) { return k + "=" + (typeof (node.attrs || {})[k] === 'string' ? "\"" + (node.attrs || {})[k] + "\"" : (node.attrs || {})[k]); }).join(', ') + "];" });
        }
        if (cluster) {
            elements.push({ text: "subgraph " + misc_utils_of_mine_generic_1.unique('cluster') + " {", id: misc_utils_of_mine_generic_1.unique('cluster'), nodes: node.children || [] });
        }
        (node.children || []).forEach(function (c) {
            var cid = getNodeId(c);
            c.attrs = c.attrs || {};
            if (!elements.find(function (c) { return c.id === cid; })) {
                elements.push({ id: cid, nodes: [c], text: cid + " [label=\"" + c.label + "\"" + (misc_utils_of_mine_generic_1.objectKeys(c.attrs).length ? ', ' : ' ') + misc_utils_of_mine_generic_1.objectKeys(c.attrs).map(function (k) { return k + "=" + (typeof (c.attrs || {})[k] === 'string' ? "\"" + (c.attrs || {})[k] + "\"" : (c.attrs || {})[k]); }).join(', ') + "];" });
            }
            elements.push({ id: id + " -> " + cid, nodes: [node, c], text: id + " -> " + cid + " ;" });
            f(c);
        });
        if (cluster) {
            elements.push({ text: "}", id: misc_utils_of_mine_generic_1.unique('cluster'), nodes: (node.children || []) });
        }
    }
    f(node);
    var dot = ("\ndigraph " + name + " {\n  rankdir=" + rankdir + ";\n  " + elements.map(function (e) { return e.text; }).join('\n  ') + "\n}").trim();
    return {
        dot: dot, elements: elements
    };
}
exports.graphToDot = graphToDot;
function getNodeId(n) {
    if (!n) {
        return '';
    }
    if (!n.id) {
        n.id = misc_utils_of_mine_generic_1.unique('node');
    }
    return n.id;
}
exports.getNodeId = getNodeId;
//# sourceMappingURL=graphToDot.js.map